#pragma once

#include <vector>
#include <string>

void photon_propagation(const std::vector<int>& arr_photon_pos_idx,
                        const std::vector<float>& arr_photon_pos_x,
                        const std::vector<float>& arr_photon_pos_y,
                        const std::vector<float>& arr_photon_pos_z,
                        const std::vector<float>& arr_photon_mu,
                        const std::vector<float>& arr_photon_az,
                        const std::vector<float>& arr_photon_tau,
                        const std::vector<float>& arr_power_per_photon,
                        const std::vector<float>& field_kext,
                        const std::vector<float>& arr_xh,
                        const std::vector<float>& arr_yh,
                        const std::vector<float>& arr_zh,
                        const std::vector<float>& arr_x,
                        const std::vector<float>& arr_y,
                        const std::vector<float>& arr_z,
                        std::vector<float>& field_absorbed_atm,
                        std::vector<float>& field_absorbed_sfc,
                        float x_max,
                        float y_max,
                        float z_max,
                        int itot,
                        int jtot,
                        int ktot,
                        float dx,
                        float dy,
                        int N,
                        int domain_section);

std::vector<float> run_MC(const std::vector<float>& arr_z,
                          const std::vector<float>& arr_zh,
                          const std::vector<float>& arr_dz,
                          const std::vector<float>& arr_kext,
                          const std::vector<float>& arr_Batm,
                          float Bsfc,
                          float dx,
                          float dy,
                          int ktot,
                          int jtot,
                          int itot,
                          const std::string& CASE,
                          const std::string& INTERCELL_TECHNIQUE,
                          const std::string& INTRACELL_TECHNIQUE,
                          int Natm,
                          int Nsfc);